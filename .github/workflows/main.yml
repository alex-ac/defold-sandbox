# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  setup_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setup_matrix.outputs.matrix }}
    steps:
    - uses: alex-ac/defold-workflows/actions/setup_matrix@master
      id: setup_matrix
  build:
    needs: setup_matrix
    strategy:
      matrix: ${{ fromJSON(needs.setup_matrix.outputs.matrix) }}
    runs-on: ${{ matrix.host_os }}
    steps:
      # Checkout, setup python, java & defold.
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
    - uses: alex-ac/defold-workflows/actions/setup_defold@master
      id: setup_defold
      with:
        version: stable
        platform: ${{ matrix.platform }}

      # Detect project name to use in artifact name.
    - id: detect_project_name
      uses: alex-ac/defold-workflows/actions/detect_project_name@master

      # Download all dependencies.
    - uses: alex-ac/defold-workflows/actions/resolve_dependencies@master
      if: matrix.supports_tests
      timeout-minutes: 5
      with:
        output: ./build

      # Build for testing.
    - uses: alex-ac/defold-workflows/actions/build@master
      if: matrix.supports_tests
      timeout-minutes: 5
      with:
        output: ./build
        keep_unused: ${{ true }}

      # Bundle game for active platform.
    - uses: alex-ac/defold-workflows/actions/bundle@master
      if: matrix.supports_tests
      timeout-minutes: 5
      with:
        output: ./build
        platform: ${{ matrix.platform }}
        architectures: ${{ matrix.architectures }}

      # Run tests.
    - uses: alex-ac/defold-workflows/actions/test@master
      if: matrix.supports_tests
      timeout-minutes: 5
      with:
        bundle_path: ./build/${{ matrix.platform }}
        platferm: ${{ matrix.platform }}
        project_name: ${{ env.DEFOLD_PROJECT_NAME }}
        test_collection: /test/test_main.collectionc

    - run: |
        [ -e  .build/ ] || rm -rf .build/

      # Download all dependencies.
    - uses: alex-ac/defold-workflows/actions/resolve_dependencies@master
      timeout-minutes: 5
      with:
        output: ./build

      # Setup secrets.
    - uses: alex-ac/defold-workflows/actions/setup_secret@master
      id: setup_private_key
      with:
        base64_data: ${{ secrets.MANIFEST_PRIVATE_DER_BASE64 }}
        path: ./manifest.private.der
    - uses: alex-ac/defold-workflows/actions/setup_secret@master
      id: setup_public_key
      with:
        base64_data: ${{ secrets.MANIFEST_PUBLIC_DER_BASE64 }}
        path: ./manifest.public.der

      # Build game archive.
    - uses: alex-ac/defold-workflows/actions/build@master
      timeout-minutes: 5
      with:
        output: ./build
        private_key_path: ${{ steps.setup_private_key.outputs.path }}
        public_key_path: ${{ steps.setup_public_key.outputs.path }}

      # Bundle game for active platform.
    - uses: alex-ac/defold-workflows/actions/bundle@master
      timeout-minutes: 5
      with:
        output: ./build
        private_key_path: ${{ steps.setup_private_key.outputs.path }}
        public_key_path: ${{ steps.setup_public_key.outputs.path }}
        platform: ${{ matrix.platform }}
        architectures: ${{ matrix.architectures }}

      # Package artifact.
    - uses: alex-ac/defold-workflows/actions/package@master
      timeout-minutes: 5
      with:
        input: ./build/${{ matrix.platform }}
        project_name: ${{ env.DEFOLD_PROJECT_NAME }}
        bundle_type: ${{ matrix.bundle_type }}
        output_dir: ./build
        output_name: ${{env.DEFOLD_PROJECT_NAME }}-${{ matrix.archive_name_platform }}

      # Upload artifact.
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ env.artifact_name }}
        path: ${{ env.artifact_path }}
